version: 2.1

jobs:
  build:
    docker:
      - image: circleci/ruby:2.6.5-stretch-node
        environment:
          - BUNDLER_VERSION: 2.1.4
          - RAILS_ENV: 'test'
          - DB_USERNAME: 'test_user'
          - DB_PASSWORD: 'password'
          - DB_HOST: 127.0.0.1
      - image: circleci/mysql:8.0
        command: --default-authentication-plugin=mysql_native_password
        environment:
          - MYSQL_USER: 'test_user'
          - MYSQL_PASSWORD: 'password'
          - MYSQL_DATABASE: 'docker_test'

    
    working_directory: ~/formula

    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            gem install bundler -v 2.1.4
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      - run:
          name: waiting for stating database
          command: dockerize -wait tcp://127.0.0.1:3306 -timeout 1m
      - run: bundle exec rake db:create
      - run: bundle exec rake db:schema:load

      - run:
          name: Rubocop
          command: bundle exec rubocop

      - run:
          name: Run rspec in parallel
          command: |
            bundle exec rspec --profile 10 \
                              --format RspecJunitFormatter \
                              --out test_results/rspec.xml \
                              --format progress \
                              $(circleci tests glob "spec/models/question_spec.rb" | circleci tests split --split-by=timings)

      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results

      - add_ssh_keys:
          fingerprints:
            - "1c:13:16:da:cb:10:9e:96:2f:6d:e3:8f:dc:0c:88:9d"
      - deploy:
          name: Capistrano deploy
          command: bundle exec cap production deploy
